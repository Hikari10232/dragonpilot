#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2252060213547807159) {
   out_2252060213547807159[0] = 0;
   out_2252060213547807159[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2252060213547807159[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2252060213547807159[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2252060213547807159[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2252060213547807159[5] = -sin(in_vec[1]);
   out_2252060213547807159[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2252060213547807159[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2252060213547807159[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2252060213547807159[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2252060213547807159[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2252060213547807159[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2252060213547807159[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2252060213547807159[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2252060213547807159[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2252060213547807159[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2252060213547807159[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2252060213547807159[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7841525859904799454) {
   out_7841525859904799454[0] = delta_x[0] + nom_x[0];
   out_7841525859904799454[1] = delta_x[1] + nom_x[1];
   out_7841525859904799454[2] = delta_x[2] + nom_x[2];
   out_7841525859904799454[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7841525859904799454[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7841525859904799454[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7841525859904799454[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7841525859904799454[7] = delta_x[6] + nom_x[7];
   out_7841525859904799454[8] = delta_x[7] + nom_x[8];
   out_7841525859904799454[9] = delta_x[8] + nom_x[9];
   out_7841525859904799454[10] = delta_x[9] + nom_x[10];
   out_7841525859904799454[11] = delta_x[10] + nom_x[11];
   out_7841525859904799454[12] = delta_x[11] + nom_x[12];
   out_7841525859904799454[13] = delta_x[12] + nom_x[13];
   out_7841525859904799454[14] = delta_x[13] + nom_x[14];
   out_7841525859904799454[15] = delta_x[14] + nom_x[15];
   out_7841525859904799454[16] = delta_x[15] + nom_x[16];
   out_7841525859904799454[17] = delta_x[16] + nom_x[17];
   out_7841525859904799454[18] = delta_x[17] + nom_x[18];
   out_7841525859904799454[19] = delta_x[18] + nom_x[19];
   out_7841525859904799454[20] = delta_x[19] + nom_x[20];
   out_7841525859904799454[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4658714646580996073) {
   out_4658714646580996073[0] = -nom_x[0] + true_x[0];
   out_4658714646580996073[1] = -nom_x[1] + true_x[1];
   out_4658714646580996073[2] = -nom_x[2] + true_x[2];
   out_4658714646580996073[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4658714646580996073[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4658714646580996073[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4658714646580996073[6] = -nom_x[7] + true_x[7];
   out_4658714646580996073[7] = -nom_x[8] + true_x[8];
   out_4658714646580996073[8] = -nom_x[9] + true_x[9];
   out_4658714646580996073[9] = -nom_x[10] + true_x[10];
   out_4658714646580996073[10] = -nom_x[11] + true_x[11];
   out_4658714646580996073[11] = -nom_x[12] + true_x[12];
   out_4658714646580996073[12] = -nom_x[13] + true_x[13];
   out_4658714646580996073[13] = -nom_x[14] + true_x[14];
   out_4658714646580996073[14] = -nom_x[15] + true_x[15];
   out_4658714646580996073[15] = -nom_x[16] + true_x[16];
   out_4658714646580996073[16] = -nom_x[17] + true_x[17];
   out_4658714646580996073[17] = -nom_x[18] + true_x[18];
   out_4658714646580996073[18] = -nom_x[19] + true_x[19];
   out_4658714646580996073[19] = -nom_x[20] + true_x[20];
   out_4658714646580996073[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_9058380023042709905) {
   out_9058380023042709905[0] = 1.0;
   out_9058380023042709905[1] = 0;
   out_9058380023042709905[2] = 0;
   out_9058380023042709905[3] = 0;
   out_9058380023042709905[4] = 0;
   out_9058380023042709905[5] = 0;
   out_9058380023042709905[6] = 0;
   out_9058380023042709905[7] = 0;
   out_9058380023042709905[8] = 0;
   out_9058380023042709905[9] = 0;
   out_9058380023042709905[10] = 0;
   out_9058380023042709905[11] = 0;
   out_9058380023042709905[12] = 0;
   out_9058380023042709905[13] = 0;
   out_9058380023042709905[14] = 0;
   out_9058380023042709905[15] = 0;
   out_9058380023042709905[16] = 0;
   out_9058380023042709905[17] = 0;
   out_9058380023042709905[18] = 0;
   out_9058380023042709905[19] = 0;
   out_9058380023042709905[20] = 0;
   out_9058380023042709905[21] = 0;
   out_9058380023042709905[22] = 1.0;
   out_9058380023042709905[23] = 0;
   out_9058380023042709905[24] = 0;
   out_9058380023042709905[25] = 0;
   out_9058380023042709905[26] = 0;
   out_9058380023042709905[27] = 0;
   out_9058380023042709905[28] = 0;
   out_9058380023042709905[29] = 0;
   out_9058380023042709905[30] = 0;
   out_9058380023042709905[31] = 0;
   out_9058380023042709905[32] = 0;
   out_9058380023042709905[33] = 0;
   out_9058380023042709905[34] = 0;
   out_9058380023042709905[35] = 0;
   out_9058380023042709905[36] = 0;
   out_9058380023042709905[37] = 0;
   out_9058380023042709905[38] = 0;
   out_9058380023042709905[39] = 0;
   out_9058380023042709905[40] = 0;
   out_9058380023042709905[41] = 0;
   out_9058380023042709905[42] = 0;
   out_9058380023042709905[43] = 0;
   out_9058380023042709905[44] = 1.0;
   out_9058380023042709905[45] = 0;
   out_9058380023042709905[46] = 0;
   out_9058380023042709905[47] = 0;
   out_9058380023042709905[48] = 0;
   out_9058380023042709905[49] = 0;
   out_9058380023042709905[50] = 0;
   out_9058380023042709905[51] = 0;
   out_9058380023042709905[52] = 0;
   out_9058380023042709905[53] = 0;
   out_9058380023042709905[54] = 0;
   out_9058380023042709905[55] = 0;
   out_9058380023042709905[56] = 0;
   out_9058380023042709905[57] = 0;
   out_9058380023042709905[58] = 0;
   out_9058380023042709905[59] = 0;
   out_9058380023042709905[60] = 0;
   out_9058380023042709905[61] = 0;
   out_9058380023042709905[62] = 0;
   out_9058380023042709905[63] = 0;
   out_9058380023042709905[64] = 0;
   out_9058380023042709905[65] = 0;
   out_9058380023042709905[66] = -0.5*state[4];
   out_9058380023042709905[67] = -0.5*state[5];
   out_9058380023042709905[68] = -0.5*state[6];
   out_9058380023042709905[69] = 0;
   out_9058380023042709905[70] = 0;
   out_9058380023042709905[71] = 0;
   out_9058380023042709905[72] = 0;
   out_9058380023042709905[73] = 0;
   out_9058380023042709905[74] = 0;
   out_9058380023042709905[75] = 0;
   out_9058380023042709905[76] = 0;
   out_9058380023042709905[77] = 0;
   out_9058380023042709905[78] = 0;
   out_9058380023042709905[79] = 0;
   out_9058380023042709905[80] = 0;
   out_9058380023042709905[81] = 0;
   out_9058380023042709905[82] = 0;
   out_9058380023042709905[83] = 0;
   out_9058380023042709905[84] = 0;
   out_9058380023042709905[85] = 0;
   out_9058380023042709905[86] = 0;
   out_9058380023042709905[87] = 0.5*state[3];
   out_9058380023042709905[88] = 0.5*state[6];
   out_9058380023042709905[89] = -0.5*state[5];
   out_9058380023042709905[90] = 0;
   out_9058380023042709905[91] = 0;
   out_9058380023042709905[92] = 0;
   out_9058380023042709905[93] = 0;
   out_9058380023042709905[94] = 0;
   out_9058380023042709905[95] = 0;
   out_9058380023042709905[96] = 0;
   out_9058380023042709905[97] = 0;
   out_9058380023042709905[98] = 0;
   out_9058380023042709905[99] = 0;
   out_9058380023042709905[100] = 0;
   out_9058380023042709905[101] = 0;
   out_9058380023042709905[102] = 0;
   out_9058380023042709905[103] = 0;
   out_9058380023042709905[104] = 0;
   out_9058380023042709905[105] = 0;
   out_9058380023042709905[106] = 0;
   out_9058380023042709905[107] = 0;
   out_9058380023042709905[108] = -0.5*state[6];
   out_9058380023042709905[109] = 0.5*state[3];
   out_9058380023042709905[110] = 0.5*state[4];
   out_9058380023042709905[111] = 0;
   out_9058380023042709905[112] = 0;
   out_9058380023042709905[113] = 0;
   out_9058380023042709905[114] = 0;
   out_9058380023042709905[115] = 0;
   out_9058380023042709905[116] = 0;
   out_9058380023042709905[117] = 0;
   out_9058380023042709905[118] = 0;
   out_9058380023042709905[119] = 0;
   out_9058380023042709905[120] = 0;
   out_9058380023042709905[121] = 0;
   out_9058380023042709905[122] = 0;
   out_9058380023042709905[123] = 0;
   out_9058380023042709905[124] = 0;
   out_9058380023042709905[125] = 0;
   out_9058380023042709905[126] = 0;
   out_9058380023042709905[127] = 0;
   out_9058380023042709905[128] = 0;
   out_9058380023042709905[129] = 0.5*state[5];
   out_9058380023042709905[130] = -0.5*state[4];
   out_9058380023042709905[131] = 0.5*state[3];
   out_9058380023042709905[132] = 0;
   out_9058380023042709905[133] = 0;
   out_9058380023042709905[134] = 0;
   out_9058380023042709905[135] = 0;
   out_9058380023042709905[136] = 0;
   out_9058380023042709905[137] = 0;
   out_9058380023042709905[138] = 0;
   out_9058380023042709905[139] = 0;
   out_9058380023042709905[140] = 0;
   out_9058380023042709905[141] = 0;
   out_9058380023042709905[142] = 0;
   out_9058380023042709905[143] = 0;
   out_9058380023042709905[144] = 0;
   out_9058380023042709905[145] = 0;
   out_9058380023042709905[146] = 0;
   out_9058380023042709905[147] = 0;
   out_9058380023042709905[148] = 0;
   out_9058380023042709905[149] = 0;
   out_9058380023042709905[150] = 0;
   out_9058380023042709905[151] = 0;
   out_9058380023042709905[152] = 0;
   out_9058380023042709905[153] = 1.0;
   out_9058380023042709905[154] = 0;
   out_9058380023042709905[155] = 0;
   out_9058380023042709905[156] = 0;
   out_9058380023042709905[157] = 0;
   out_9058380023042709905[158] = 0;
   out_9058380023042709905[159] = 0;
   out_9058380023042709905[160] = 0;
   out_9058380023042709905[161] = 0;
   out_9058380023042709905[162] = 0;
   out_9058380023042709905[163] = 0;
   out_9058380023042709905[164] = 0;
   out_9058380023042709905[165] = 0;
   out_9058380023042709905[166] = 0;
   out_9058380023042709905[167] = 0;
   out_9058380023042709905[168] = 0;
   out_9058380023042709905[169] = 0;
   out_9058380023042709905[170] = 0;
   out_9058380023042709905[171] = 0;
   out_9058380023042709905[172] = 0;
   out_9058380023042709905[173] = 0;
   out_9058380023042709905[174] = 0;
   out_9058380023042709905[175] = 1.0;
   out_9058380023042709905[176] = 0;
   out_9058380023042709905[177] = 0;
   out_9058380023042709905[178] = 0;
   out_9058380023042709905[179] = 0;
   out_9058380023042709905[180] = 0;
   out_9058380023042709905[181] = 0;
   out_9058380023042709905[182] = 0;
   out_9058380023042709905[183] = 0;
   out_9058380023042709905[184] = 0;
   out_9058380023042709905[185] = 0;
   out_9058380023042709905[186] = 0;
   out_9058380023042709905[187] = 0;
   out_9058380023042709905[188] = 0;
   out_9058380023042709905[189] = 0;
   out_9058380023042709905[190] = 0;
   out_9058380023042709905[191] = 0;
   out_9058380023042709905[192] = 0;
   out_9058380023042709905[193] = 0;
   out_9058380023042709905[194] = 0;
   out_9058380023042709905[195] = 0;
   out_9058380023042709905[196] = 0;
   out_9058380023042709905[197] = 1.0;
   out_9058380023042709905[198] = 0;
   out_9058380023042709905[199] = 0;
   out_9058380023042709905[200] = 0;
   out_9058380023042709905[201] = 0;
   out_9058380023042709905[202] = 0;
   out_9058380023042709905[203] = 0;
   out_9058380023042709905[204] = 0;
   out_9058380023042709905[205] = 0;
   out_9058380023042709905[206] = 0;
   out_9058380023042709905[207] = 0;
   out_9058380023042709905[208] = 0;
   out_9058380023042709905[209] = 0;
   out_9058380023042709905[210] = 0;
   out_9058380023042709905[211] = 0;
   out_9058380023042709905[212] = 0;
   out_9058380023042709905[213] = 0;
   out_9058380023042709905[214] = 0;
   out_9058380023042709905[215] = 0;
   out_9058380023042709905[216] = 0;
   out_9058380023042709905[217] = 0;
   out_9058380023042709905[218] = 0;
   out_9058380023042709905[219] = 1.0;
   out_9058380023042709905[220] = 0;
   out_9058380023042709905[221] = 0;
   out_9058380023042709905[222] = 0;
   out_9058380023042709905[223] = 0;
   out_9058380023042709905[224] = 0;
   out_9058380023042709905[225] = 0;
   out_9058380023042709905[226] = 0;
   out_9058380023042709905[227] = 0;
   out_9058380023042709905[228] = 0;
   out_9058380023042709905[229] = 0;
   out_9058380023042709905[230] = 0;
   out_9058380023042709905[231] = 0;
   out_9058380023042709905[232] = 0;
   out_9058380023042709905[233] = 0;
   out_9058380023042709905[234] = 0;
   out_9058380023042709905[235] = 0;
   out_9058380023042709905[236] = 0;
   out_9058380023042709905[237] = 0;
   out_9058380023042709905[238] = 0;
   out_9058380023042709905[239] = 0;
   out_9058380023042709905[240] = 0;
   out_9058380023042709905[241] = 1.0;
   out_9058380023042709905[242] = 0;
   out_9058380023042709905[243] = 0;
   out_9058380023042709905[244] = 0;
   out_9058380023042709905[245] = 0;
   out_9058380023042709905[246] = 0;
   out_9058380023042709905[247] = 0;
   out_9058380023042709905[248] = 0;
   out_9058380023042709905[249] = 0;
   out_9058380023042709905[250] = 0;
   out_9058380023042709905[251] = 0;
   out_9058380023042709905[252] = 0;
   out_9058380023042709905[253] = 0;
   out_9058380023042709905[254] = 0;
   out_9058380023042709905[255] = 0;
   out_9058380023042709905[256] = 0;
   out_9058380023042709905[257] = 0;
   out_9058380023042709905[258] = 0;
   out_9058380023042709905[259] = 0;
   out_9058380023042709905[260] = 0;
   out_9058380023042709905[261] = 0;
   out_9058380023042709905[262] = 0;
   out_9058380023042709905[263] = 1.0;
   out_9058380023042709905[264] = 0;
   out_9058380023042709905[265] = 0;
   out_9058380023042709905[266] = 0;
   out_9058380023042709905[267] = 0;
   out_9058380023042709905[268] = 0;
   out_9058380023042709905[269] = 0;
   out_9058380023042709905[270] = 0;
   out_9058380023042709905[271] = 0;
   out_9058380023042709905[272] = 0;
   out_9058380023042709905[273] = 0;
   out_9058380023042709905[274] = 0;
   out_9058380023042709905[275] = 0;
   out_9058380023042709905[276] = 0;
   out_9058380023042709905[277] = 0;
   out_9058380023042709905[278] = 0;
   out_9058380023042709905[279] = 0;
   out_9058380023042709905[280] = 0;
   out_9058380023042709905[281] = 0;
   out_9058380023042709905[282] = 0;
   out_9058380023042709905[283] = 0;
   out_9058380023042709905[284] = 0;
   out_9058380023042709905[285] = 1.0;
   out_9058380023042709905[286] = 0;
   out_9058380023042709905[287] = 0;
   out_9058380023042709905[288] = 0;
   out_9058380023042709905[289] = 0;
   out_9058380023042709905[290] = 0;
   out_9058380023042709905[291] = 0;
   out_9058380023042709905[292] = 0;
   out_9058380023042709905[293] = 0;
   out_9058380023042709905[294] = 0;
   out_9058380023042709905[295] = 0;
   out_9058380023042709905[296] = 0;
   out_9058380023042709905[297] = 0;
   out_9058380023042709905[298] = 0;
   out_9058380023042709905[299] = 0;
   out_9058380023042709905[300] = 0;
   out_9058380023042709905[301] = 0;
   out_9058380023042709905[302] = 0;
   out_9058380023042709905[303] = 0;
   out_9058380023042709905[304] = 0;
   out_9058380023042709905[305] = 0;
   out_9058380023042709905[306] = 0;
   out_9058380023042709905[307] = 1.0;
   out_9058380023042709905[308] = 0;
   out_9058380023042709905[309] = 0;
   out_9058380023042709905[310] = 0;
   out_9058380023042709905[311] = 0;
   out_9058380023042709905[312] = 0;
   out_9058380023042709905[313] = 0;
   out_9058380023042709905[314] = 0;
   out_9058380023042709905[315] = 0;
   out_9058380023042709905[316] = 0;
   out_9058380023042709905[317] = 0;
   out_9058380023042709905[318] = 0;
   out_9058380023042709905[319] = 0;
   out_9058380023042709905[320] = 0;
   out_9058380023042709905[321] = 0;
   out_9058380023042709905[322] = 0;
   out_9058380023042709905[323] = 0;
   out_9058380023042709905[324] = 0;
   out_9058380023042709905[325] = 0;
   out_9058380023042709905[326] = 0;
   out_9058380023042709905[327] = 0;
   out_9058380023042709905[328] = 0;
   out_9058380023042709905[329] = 1.0;
   out_9058380023042709905[330] = 0;
   out_9058380023042709905[331] = 0;
   out_9058380023042709905[332] = 0;
   out_9058380023042709905[333] = 0;
   out_9058380023042709905[334] = 0;
   out_9058380023042709905[335] = 0;
   out_9058380023042709905[336] = 0;
   out_9058380023042709905[337] = 0;
   out_9058380023042709905[338] = 0;
   out_9058380023042709905[339] = 0;
   out_9058380023042709905[340] = 0;
   out_9058380023042709905[341] = 0;
   out_9058380023042709905[342] = 0;
   out_9058380023042709905[343] = 0;
   out_9058380023042709905[344] = 0;
   out_9058380023042709905[345] = 0;
   out_9058380023042709905[346] = 0;
   out_9058380023042709905[347] = 0;
   out_9058380023042709905[348] = 0;
   out_9058380023042709905[349] = 0;
   out_9058380023042709905[350] = 0;
   out_9058380023042709905[351] = 1.0;
   out_9058380023042709905[352] = 0;
   out_9058380023042709905[353] = 0;
   out_9058380023042709905[354] = 0;
   out_9058380023042709905[355] = 0;
   out_9058380023042709905[356] = 0;
   out_9058380023042709905[357] = 0;
   out_9058380023042709905[358] = 0;
   out_9058380023042709905[359] = 0;
   out_9058380023042709905[360] = 0;
   out_9058380023042709905[361] = 0;
   out_9058380023042709905[362] = 0;
   out_9058380023042709905[363] = 0;
   out_9058380023042709905[364] = 0;
   out_9058380023042709905[365] = 0;
   out_9058380023042709905[366] = 0;
   out_9058380023042709905[367] = 0;
   out_9058380023042709905[368] = 0;
   out_9058380023042709905[369] = 0;
   out_9058380023042709905[370] = 0;
   out_9058380023042709905[371] = 0;
   out_9058380023042709905[372] = 0;
   out_9058380023042709905[373] = 1.0;
   out_9058380023042709905[374] = 0;
   out_9058380023042709905[375] = 0;
   out_9058380023042709905[376] = 0;
   out_9058380023042709905[377] = 0;
   out_9058380023042709905[378] = 0;
   out_9058380023042709905[379] = 0;
   out_9058380023042709905[380] = 0;
   out_9058380023042709905[381] = 0;
   out_9058380023042709905[382] = 0;
   out_9058380023042709905[383] = 0;
   out_9058380023042709905[384] = 0;
   out_9058380023042709905[385] = 0;
   out_9058380023042709905[386] = 0;
   out_9058380023042709905[387] = 0;
   out_9058380023042709905[388] = 0;
   out_9058380023042709905[389] = 0;
   out_9058380023042709905[390] = 0;
   out_9058380023042709905[391] = 0;
   out_9058380023042709905[392] = 0;
   out_9058380023042709905[393] = 0;
   out_9058380023042709905[394] = 0;
   out_9058380023042709905[395] = 1.0;
   out_9058380023042709905[396] = 0;
   out_9058380023042709905[397] = 0;
   out_9058380023042709905[398] = 0;
   out_9058380023042709905[399] = 0;
   out_9058380023042709905[400] = 0;
   out_9058380023042709905[401] = 0;
   out_9058380023042709905[402] = 0;
   out_9058380023042709905[403] = 0;
   out_9058380023042709905[404] = 0;
   out_9058380023042709905[405] = 0;
   out_9058380023042709905[406] = 0;
   out_9058380023042709905[407] = 0;
   out_9058380023042709905[408] = 0;
   out_9058380023042709905[409] = 0;
   out_9058380023042709905[410] = 0;
   out_9058380023042709905[411] = 0;
   out_9058380023042709905[412] = 0;
   out_9058380023042709905[413] = 0;
   out_9058380023042709905[414] = 0;
   out_9058380023042709905[415] = 0;
   out_9058380023042709905[416] = 0;
   out_9058380023042709905[417] = 1.0;
   out_9058380023042709905[418] = 0;
   out_9058380023042709905[419] = 0;
   out_9058380023042709905[420] = 0;
   out_9058380023042709905[421] = 0;
   out_9058380023042709905[422] = 0;
   out_9058380023042709905[423] = 0;
   out_9058380023042709905[424] = 0;
   out_9058380023042709905[425] = 0;
   out_9058380023042709905[426] = 0;
   out_9058380023042709905[427] = 0;
   out_9058380023042709905[428] = 0;
   out_9058380023042709905[429] = 0;
   out_9058380023042709905[430] = 0;
   out_9058380023042709905[431] = 0;
   out_9058380023042709905[432] = 0;
   out_9058380023042709905[433] = 0;
   out_9058380023042709905[434] = 0;
   out_9058380023042709905[435] = 0;
   out_9058380023042709905[436] = 0;
   out_9058380023042709905[437] = 0;
   out_9058380023042709905[438] = 0;
   out_9058380023042709905[439] = 1.0;
   out_9058380023042709905[440] = 0;
   out_9058380023042709905[441] = 0;
   out_9058380023042709905[442] = 0;
   out_9058380023042709905[443] = 0;
   out_9058380023042709905[444] = 0;
   out_9058380023042709905[445] = 0;
   out_9058380023042709905[446] = 0;
   out_9058380023042709905[447] = 0;
   out_9058380023042709905[448] = 0;
   out_9058380023042709905[449] = 0;
   out_9058380023042709905[450] = 0;
   out_9058380023042709905[451] = 0;
   out_9058380023042709905[452] = 0;
   out_9058380023042709905[453] = 0;
   out_9058380023042709905[454] = 0;
   out_9058380023042709905[455] = 0;
   out_9058380023042709905[456] = 0;
   out_9058380023042709905[457] = 0;
   out_9058380023042709905[458] = 0;
   out_9058380023042709905[459] = 0;
   out_9058380023042709905[460] = 0;
   out_9058380023042709905[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1044564808547905457) {
   out_1044564808547905457[0] = dt*state[7] + state[0];
   out_1044564808547905457[1] = dt*state[8] + state[1];
   out_1044564808547905457[2] = dt*state[9] + state[2];
   out_1044564808547905457[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1044564808547905457[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1044564808547905457[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1044564808547905457[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1044564808547905457[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1044564808547905457[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1044564808547905457[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1044564808547905457[10] = state[10];
   out_1044564808547905457[11] = state[11];
   out_1044564808547905457[12] = state[12];
   out_1044564808547905457[13] = state[13];
   out_1044564808547905457[14] = state[14];
   out_1044564808547905457[15] = state[15];
   out_1044564808547905457[16] = state[16];
   out_1044564808547905457[17] = state[17];
   out_1044564808547905457[18] = state[18];
   out_1044564808547905457[19] = state[19];
   out_1044564808547905457[20] = state[20];
   out_1044564808547905457[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6112935945836886280) {
   out_6112935945836886280[0] = 1;
   out_6112935945836886280[1] = 0;
   out_6112935945836886280[2] = 0;
   out_6112935945836886280[3] = 0;
   out_6112935945836886280[4] = 0;
   out_6112935945836886280[5] = 0;
   out_6112935945836886280[6] = dt;
   out_6112935945836886280[7] = 0;
   out_6112935945836886280[8] = 0;
   out_6112935945836886280[9] = 0;
   out_6112935945836886280[10] = 0;
   out_6112935945836886280[11] = 0;
   out_6112935945836886280[12] = 0;
   out_6112935945836886280[13] = 0;
   out_6112935945836886280[14] = 0;
   out_6112935945836886280[15] = 0;
   out_6112935945836886280[16] = 0;
   out_6112935945836886280[17] = 0;
   out_6112935945836886280[18] = 0;
   out_6112935945836886280[19] = 0;
   out_6112935945836886280[20] = 0;
   out_6112935945836886280[21] = 0;
   out_6112935945836886280[22] = 1;
   out_6112935945836886280[23] = 0;
   out_6112935945836886280[24] = 0;
   out_6112935945836886280[25] = 0;
   out_6112935945836886280[26] = 0;
   out_6112935945836886280[27] = 0;
   out_6112935945836886280[28] = dt;
   out_6112935945836886280[29] = 0;
   out_6112935945836886280[30] = 0;
   out_6112935945836886280[31] = 0;
   out_6112935945836886280[32] = 0;
   out_6112935945836886280[33] = 0;
   out_6112935945836886280[34] = 0;
   out_6112935945836886280[35] = 0;
   out_6112935945836886280[36] = 0;
   out_6112935945836886280[37] = 0;
   out_6112935945836886280[38] = 0;
   out_6112935945836886280[39] = 0;
   out_6112935945836886280[40] = 0;
   out_6112935945836886280[41] = 0;
   out_6112935945836886280[42] = 0;
   out_6112935945836886280[43] = 0;
   out_6112935945836886280[44] = 1;
   out_6112935945836886280[45] = 0;
   out_6112935945836886280[46] = 0;
   out_6112935945836886280[47] = 0;
   out_6112935945836886280[48] = 0;
   out_6112935945836886280[49] = 0;
   out_6112935945836886280[50] = dt;
   out_6112935945836886280[51] = 0;
   out_6112935945836886280[52] = 0;
   out_6112935945836886280[53] = 0;
   out_6112935945836886280[54] = 0;
   out_6112935945836886280[55] = 0;
   out_6112935945836886280[56] = 0;
   out_6112935945836886280[57] = 0;
   out_6112935945836886280[58] = 0;
   out_6112935945836886280[59] = 0;
   out_6112935945836886280[60] = 0;
   out_6112935945836886280[61] = 0;
   out_6112935945836886280[62] = 0;
   out_6112935945836886280[63] = 0;
   out_6112935945836886280[64] = 0;
   out_6112935945836886280[65] = 0;
   out_6112935945836886280[66] = 1;
   out_6112935945836886280[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6112935945836886280[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6112935945836886280[69] = 0;
   out_6112935945836886280[70] = 0;
   out_6112935945836886280[71] = 0;
   out_6112935945836886280[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6112935945836886280[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6112935945836886280[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6112935945836886280[75] = 0;
   out_6112935945836886280[76] = 0;
   out_6112935945836886280[77] = 0;
   out_6112935945836886280[78] = 0;
   out_6112935945836886280[79] = 0;
   out_6112935945836886280[80] = 0;
   out_6112935945836886280[81] = 0;
   out_6112935945836886280[82] = 0;
   out_6112935945836886280[83] = 0;
   out_6112935945836886280[84] = 0;
   out_6112935945836886280[85] = 0;
   out_6112935945836886280[86] = 0;
   out_6112935945836886280[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6112935945836886280[88] = 1;
   out_6112935945836886280[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6112935945836886280[90] = 0;
   out_6112935945836886280[91] = 0;
   out_6112935945836886280[92] = 0;
   out_6112935945836886280[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6112935945836886280[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6112935945836886280[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6112935945836886280[96] = 0;
   out_6112935945836886280[97] = 0;
   out_6112935945836886280[98] = 0;
   out_6112935945836886280[99] = 0;
   out_6112935945836886280[100] = 0;
   out_6112935945836886280[101] = 0;
   out_6112935945836886280[102] = 0;
   out_6112935945836886280[103] = 0;
   out_6112935945836886280[104] = 0;
   out_6112935945836886280[105] = 0;
   out_6112935945836886280[106] = 0;
   out_6112935945836886280[107] = 0;
   out_6112935945836886280[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6112935945836886280[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6112935945836886280[110] = 1;
   out_6112935945836886280[111] = 0;
   out_6112935945836886280[112] = 0;
   out_6112935945836886280[113] = 0;
   out_6112935945836886280[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6112935945836886280[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6112935945836886280[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6112935945836886280[117] = 0;
   out_6112935945836886280[118] = 0;
   out_6112935945836886280[119] = 0;
   out_6112935945836886280[120] = 0;
   out_6112935945836886280[121] = 0;
   out_6112935945836886280[122] = 0;
   out_6112935945836886280[123] = 0;
   out_6112935945836886280[124] = 0;
   out_6112935945836886280[125] = 0;
   out_6112935945836886280[126] = 0;
   out_6112935945836886280[127] = 0;
   out_6112935945836886280[128] = 0;
   out_6112935945836886280[129] = 0;
   out_6112935945836886280[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6112935945836886280[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6112935945836886280[132] = 1;
   out_6112935945836886280[133] = 0;
   out_6112935945836886280[134] = 0;
   out_6112935945836886280[135] = 0;
   out_6112935945836886280[136] = 0;
   out_6112935945836886280[137] = 0;
   out_6112935945836886280[138] = 0;
   out_6112935945836886280[139] = 0;
   out_6112935945836886280[140] = 0;
   out_6112935945836886280[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6112935945836886280[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6112935945836886280[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6112935945836886280[144] = 0;
   out_6112935945836886280[145] = 0;
   out_6112935945836886280[146] = 0;
   out_6112935945836886280[147] = 0;
   out_6112935945836886280[148] = 0;
   out_6112935945836886280[149] = 0;
   out_6112935945836886280[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6112935945836886280[151] = 0;
   out_6112935945836886280[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6112935945836886280[153] = 0;
   out_6112935945836886280[154] = 1;
   out_6112935945836886280[155] = 0;
   out_6112935945836886280[156] = 0;
   out_6112935945836886280[157] = 0;
   out_6112935945836886280[158] = 0;
   out_6112935945836886280[159] = 0;
   out_6112935945836886280[160] = 0;
   out_6112935945836886280[161] = 0;
   out_6112935945836886280[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6112935945836886280[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6112935945836886280[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6112935945836886280[165] = 0;
   out_6112935945836886280[166] = 0;
   out_6112935945836886280[167] = 0;
   out_6112935945836886280[168] = 0;
   out_6112935945836886280[169] = 0;
   out_6112935945836886280[170] = 0;
   out_6112935945836886280[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6112935945836886280[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6112935945836886280[173] = 0;
   out_6112935945836886280[174] = 0;
   out_6112935945836886280[175] = 0;
   out_6112935945836886280[176] = 1;
   out_6112935945836886280[177] = 0;
   out_6112935945836886280[178] = 0;
   out_6112935945836886280[179] = 0;
   out_6112935945836886280[180] = 0;
   out_6112935945836886280[181] = 0;
   out_6112935945836886280[182] = 0;
   out_6112935945836886280[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6112935945836886280[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6112935945836886280[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6112935945836886280[186] = 0;
   out_6112935945836886280[187] = 0;
   out_6112935945836886280[188] = 0;
   out_6112935945836886280[189] = 0;
   out_6112935945836886280[190] = 0;
   out_6112935945836886280[191] = 0;
   out_6112935945836886280[192] = 0;
   out_6112935945836886280[193] = 0;
   out_6112935945836886280[194] = 0;
   out_6112935945836886280[195] = 0;
   out_6112935945836886280[196] = 0;
   out_6112935945836886280[197] = 0;
   out_6112935945836886280[198] = 1;
   out_6112935945836886280[199] = 0;
   out_6112935945836886280[200] = 0;
   out_6112935945836886280[201] = 0;
   out_6112935945836886280[202] = 0;
   out_6112935945836886280[203] = 0;
   out_6112935945836886280[204] = 0;
   out_6112935945836886280[205] = 0;
   out_6112935945836886280[206] = 0;
   out_6112935945836886280[207] = 0;
   out_6112935945836886280[208] = 0;
   out_6112935945836886280[209] = 0;
   out_6112935945836886280[210] = 0;
   out_6112935945836886280[211] = 0;
   out_6112935945836886280[212] = 0;
   out_6112935945836886280[213] = 0;
   out_6112935945836886280[214] = 0;
   out_6112935945836886280[215] = 0;
   out_6112935945836886280[216] = 0;
   out_6112935945836886280[217] = 0;
   out_6112935945836886280[218] = 0;
   out_6112935945836886280[219] = 0;
   out_6112935945836886280[220] = 1;
   out_6112935945836886280[221] = 0;
   out_6112935945836886280[222] = 0;
   out_6112935945836886280[223] = 0;
   out_6112935945836886280[224] = 0;
   out_6112935945836886280[225] = 0;
   out_6112935945836886280[226] = 0;
   out_6112935945836886280[227] = 0;
   out_6112935945836886280[228] = 0;
   out_6112935945836886280[229] = 0;
   out_6112935945836886280[230] = 0;
   out_6112935945836886280[231] = 0;
   out_6112935945836886280[232] = 0;
   out_6112935945836886280[233] = 0;
   out_6112935945836886280[234] = 0;
   out_6112935945836886280[235] = 0;
   out_6112935945836886280[236] = 0;
   out_6112935945836886280[237] = 0;
   out_6112935945836886280[238] = 0;
   out_6112935945836886280[239] = 0;
   out_6112935945836886280[240] = 0;
   out_6112935945836886280[241] = 0;
   out_6112935945836886280[242] = 1;
   out_6112935945836886280[243] = 0;
   out_6112935945836886280[244] = 0;
   out_6112935945836886280[245] = 0;
   out_6112935945836886280[246] = 0;
   out_6112935945836886280[247] = 0;
   out_6112935945836886280[248] = 0;
   out_6112935945836886280[249] = 0;
   out_6112935945836886280[250] = 0;
   out_6112935945836886280[251] = 0;
   out_6112935945836886280[252] = 0;
   out_6112935945836886280[253] = 0;
   out_6112935945836886280[254] = 0;
   out_6112935945836886280[255] = 0;
   out_6112935945836886280[256] = 0;
   out_6112935945836886280[257] = 0;
   out_6112935945836886280[258] = 0;
   out_6112935945836886280[259] = 0;
   out_6112935945836886280[260] = 0;
   out_6112935945836886280[261] = 0;
   out_6112935945836886280[262] = 0;
   out_6112935945836886280[263] = 0;
   out_6112935945836886280[264] = 1;
   out_6112935945836886280[265] = 0;
   out_6112935945836886280[266] = 0;
   out_6112935945836886280[267] = 0;
   out_6112935945836886280[268] = 0;
   out_6112935945836886280[269] = 0;
   out_6112935945836886280[270] = 0;
   out_6112935945836886280[271] = 0;
   out_6112935945836886280[272] = 0;
   out_6112935945836886280[273] = 0;
   out_6112935945836886280[274] = 0;
   out_6112935945836886280[275] = 0;
   out_6112935945836886280[276] = 0;
   out_6112935945836886280[277] = 0;
   out_6112935945836886280[278] = 0;
   out_6112935945836886280[279] = 0;
   out_6112935945836886280[280] = 0;
   out_6112935945836886280[281] = 0;
   out_6112935945836886280[282] = 0;
   out_6112935945836886280[283] = 0;
   out_6112935945836886280[284] = 0;
   out_6112935945836886280[285] = 0;
   out_6112935945836886280[286] = 1;
   out_6112935945836886280[287] = 0;
   out_6112935945836886280[288] = 0;
   out_6112935945836886280[289] = 0;
   out_6112935945836886280[290] = 0;
   out_6112935945836886280[291] = 0;
   out_6112935945836886280[292] = 0;
   out_6112935945836886280[293] = 0;
   out_6112935945836886280[294] = 0;
   out_6112935945836886280[295] = 0;
   out_6112935945836886280[296] = 0;
   out_6112935945836886280[297] = 0;
   out_6112935945836886280[298] = 0;
   out_6112935945836886280[299] = 0;
   out_6112935945836886280[300] = 0;
   out_6112935945836886280[301] = 0;
   out_6112935945836886280[302] = 0;
   out_6112935945836886280[303] = 0;
   out_6112935945836886280[304] = 0;
   out_6112935945836886280[305] = 0;
   out_6112935945836886280[306] = 0;
   out_6112935945836886280[307] = 0;
   out_6112935945836886280[308] = 1;
   out_6112935945836886280[309] = 0;
   out_6112935945836886280[310] = 0;
   out_6112935945836886280[311] = 0;
   out_6112935945836886280[312] = 0;
   out_6112935945836886280[313] = 0;
   out_6112935945836886280[314] = 0;
   out_6112935945836886280[315] = 0;
   out_6112935945836886280[316] = 0;
   out_6112935945836886280[317] = 0;
   out_6112935945836886280[318] = 0;
   out_6112935945836886280[319] = 0;
   out_6112935945836886280[320] = 0;
   out_6112935945836886280[321] = 0;
   out_6112935945836886280[322] = 0;
   out_6112935945836886280[323] = 0;
   out_6112935945836886280[324] = 0;
   out_6112935945836886280[325] = 0;
   out_6112935945836886280[326] = 0;
   out_6112935945836886280[327] = 0;
   out_6112935945836886280[328] = 0;
   out_6112935945836886280[329] = 0;
   out_6112935945836886280[330] = 1;
   out_6112935945836886280[331] = 0;
   out_6112935945836886280[332] = 0;
   out_6112935945836886280[333] = 0;
   out_6112935945836886280[334] = 0;
   out_6112935945836886280[335] = 0;
   out_6112935945836886280[336] = 0;
   out_6112935945836886280[337] = 0;
   out_6112935945836886280[338] = 0;
   out_6112935945836886280[339] = 0;
   out_6112935945836886280[340] = 0;
   out_6112935945836886280[341] = 0;
   out_6112935945836886280[342] = 0;
   out_6112935945836886280[343] = 0;
   out_6112935945836886280[344] = 0;
   out_6112935945836886280[345] = 0;
   out_6112935945836886280[346] = 0;
   out_6112935945836886280[347] = 0;
   out_6112935945836886280[348] = 0;
   out_6112935945836886280[349] = 0;
   out_6112935945836886280[350] = 0;
   out_6112935945836886280[351] = 0;
   out_6112935945836886280[352] = 1;
   out_6112935945836886280[353] = 0;
   out_6112935945836886280[354] = 0;
   out_6112935945836886280[355] = 0;
   out_6112935945836886280[356] = 0;
   out_6112935945836886280[357] = 0;
   out_6112935945836886280[358] = 0;
   out_6112935945836886280[359] = 0;
   out_6112935945836886280[360] = 0;
   out_6112935945836886280[361] = 0;
   out_6112935945836886280[362] = 0;
   out_6112935945836886280[363] = 0;
   out_6112935945836886280[364] = 0;
   out_6112935945836886280[365] = 0;
   out_6112935945836886280[366] = 0;
   out_6112935945836886280[367] = 0;
   out_6112935945836886280[368] = 0;
   out_6112935945836886280[369] = 0;
   out_6112935945836886280[370] = 0;
   out_6112935945836886280[371] = 0;
   out_6112935945836886280[372] = 0;
   out_6112935945836886280[373] = 0;
   out_6112935945836886280[374] = 1;
   out_6112935945836886280[375] = 0;
   out_6112935945836886280[376] = 0;
   out_6112935945836886280[377] = 0;
   out_6112935945836886280[378] = 0;
   out_6112935945836886280[379] = 0;
   out_6112935945836886280[380] = 0;
   out_6112935945836886280[381] = 0;
   out_6112935945836886280[382] = 0;
   out_6112935945836886280[383] = 0;
   out_6112935945836886280[384] = 0;
   out_6112935945836886280[385] = 0;
   out_6112935945836886280[386] = 0;
   out_6112935945836886280[387] = 0;
   out_6112935945836886280[388] = 0;
   out_6112935945836886280[389] = 0;
   out_6112935945836886280[390] = 0;
   out_6112935945836886280[391] = 0;
   out_6112935945836886280[392] = 0;
   out_6112935945836886280[393] = 0;
   out_6112935945836886280[394] = 0;
   out_6112935945836886280[395] = 0;
   out_6112935945836886280[396] = 1;
   out_6112935945836886280[397] = 0;
   out_6112935945836886280[398] = 0;
   out_6112935945836886280[399] = 0;
   out_6112935945836886280[400] = 0;
   out_6112935945836886280[401] = 0;
   out_6112935945836886280[402] = 0;
   out_6112935945836886280[403] = 0;
   out_6112935945836886280[404] = 0;
   out_6112935945836886280[405] = 0;
   out_6112935945836886280[406] = 0;
   out_6112935945836886280[407] = 0;
   out_6112935945836886280[408] = 0;
   out_6112935945836886280[409] = 0;
   out_6112935945836886280[410] = 0;
   out_6112935945836886280[411] = 0;
   out_6112935945836886280[412] = 0;
   out_6112935945836886280[413] = 0;
   out_6112935945836886280[414] = 0;
   out_6112935945836886280[415] = 0;
   out_6112935945836886280[416] = 0;
   out_6112935945836886280[417] = 0;
   out_6112935945836886280[418] = 1;
   out_6112935945836886280[419] = 0;
   out_6112935945836886280[420] = 0;
   out_6112935945836886280[421] = 0;
   out_6112935945836886280[422] = 0;
   out_6112935945836886280[423] = 0;
   out_6112935945836886280[424] = 0;
   out_6112935945836886280[425] = 0;
   out_6112935945836886280[426] = 0;
   out_6112935945836886280[427] = 0;
   out_6112935945836886280[428] = 0;
   out_6112935945836886280[429] = 0;
   out_6112935945836886280[430] = 0;
   out_6112935945836886280[431] = 0;
   out_6112935945836886280[432] = 0;
   out_6112935945836886280[433] = 0;
   out_6112935945836886280[434] = 0;
   out_6112935945836886280[435] = 0;
   out_6112935945836886280[436] = 0;
   out_6112935945836886280[437] = 0;
   out_6112935945836886280[438] = 0;
   out_6112935945836886280[439] = 0;
   out_6112935945836886280[440] = 1;
}
void h_4(double *state, double *unused, double *out_6558505756783094796) {
   out_6558505756783094796[0] = state[10] + state[13];
   out_6558505756783094796[1] = state[11] + state[14];
   out_6558505756783094796[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4393075056079565068) {
   out_4393075056079565068[0] = 0;
   out_4393075056079565068[1] = 0;
   out_4393075056079565068[2] = 0;
   out_4393075056079565068[3] = 0;
   out_4393075056079565068[4] = 0;
   out_4393075056079565068[5] = 0;
   out_4393075056079565068[6] = 0;
   out_4393075056079565068[7] = 0;
   out_4393075056079565068[8] = 0;
   out_4393075056079565068[9] = 0;
   out_4393075056079565068[10] = 1;
   out_4393075056079565068[11] = 0;
   out_4393075056079565068[12] = 0;
   out_4393075056079565068[13] = 1;
   out_4393075056079565068[14] = 0;
   out_4393075056079565068[15] = 0;
   out_4393075056079565068[16] = 0;
   out_4393075056079565068[17] = 0;
   out_4393075056079565068[18] = 0;
   out_4393075056079565068[19] = 0;
   out_4393075056079565068[20] = 0;
   out_4393075056079565068[21] = 0;
   out_4393075056079565068[22] = 0;
   out_4393075056079565068[23] = 0;
   out_4393075056079565068[24] = 0;
   out_4393075056079565068[25] = 0;
   out_4393075056079565068[26] = 0;
   out_4393075056079565068[27] = 0;
   out_4393075056079565068[28] = 0;
   out_4393075056079565068[29] = 0;
   out_4393075056079565068[30] = 0;
   out_4393075056079565068[31] = 0;
   out_4393075056079565068[32] = 0;
   out_4393075056079565068[33] = 1;
   out_4393075056079565068[34] = 0;
   out_4393075056079565068[35] = 0;
   out_4393075056079565068[36] = 1;
   out_4393075056079565068[37] = 0;
   out_4393075056079565068[38] = 0;
   out_4393075056079565068[39] = 0;
   out_4393075056079565068[40] = 0;
   out_4393075056079565068[41] = 0;
   out_4393075056079565068[42] = 0;
   out_4393075056079565068[43] = 0;
   out_4393075056079565068[44] = 0;
   out_4393075056079565068[45] = 0;
   out_4393075056079565068[46] = 0;
   out_4393075056079565068[47] = 0;
   out_4393075056079565068[48] = 0;
   out_4393075056079565068[49] = 0;
   out_4393075056079565068[50] = 0;
   out_4393075056079565068[51] = 0;
   out_4393075056079565068[52] = 0;
   out_4393075056079565068[53] = 0;
   out_4393075056079565068[54] = 0;
   out_4393075056079565068[55] = 0;
   out_4393075056079565068[56] = 1;
   out_4393075056079565068[57] = 0;
   out_4393075056079565068[58] = 0;
   out_4393075056079565068[59] = 1;
   out_4393075056079565068[60] = 0;
   out_4393075056079565068[61] = 0;
   out_4393075056079565068[62] = 0;
   out_4393075056079565068[63] = 0;
   out_4393075056079565068[64] = 0;
   out_4393075056079565068[65] = 0;
}
void h_9(double *state, double *unused, double *out_7725128392923987525) {
   out_7725128392923987525[0] = state[10];
   out_7725128392923987525[1] = state[11];
   out_7725128392923987525[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4634264702709155713) {
   out_4634264702709155713[0] = 0;
   out_4634264702709155713[1] = 0;
   out_4634264702709155713[2] = 0;
   out_4634264702709155713[3] = 0;
   out_4634264702709155713[4] = 0;
   out_4634264702709155713[5] = 0;
   out_4634264702709155713[6] = 0;
   out_4634264702709155713[7] = 0;
   out_4634264702709155713[8] = 0;
   out_4634264702709155713[9] = 0;
   out_4634264702709155713[10] = 1;
   out_4634264702709155713[11] = 0;
   out_4634264702709155713[12] = 0;
   out_4634264702709155713[13] = 0;
   out_4634264702709155713[14] = 0;
   out_4634264702709155713[15] = 0;
   out_4634264702709155713[16] = 0;
   out_4634264702709155713[17] = 0;
   out_4634264702709155713[18] = 0;
   out_4634264702709155713[19] = 0;
   out_4634264702709155713[20] = 0;
   out_4634264702709155713[21] = 0;
   out_4634264702709155713[22] = 0;
   out_4634264702709155713[23] = 0;
   out_4634264702709155713[24] = 0;
   out_4634264702709155713[25] = 0;
   out_4634264702709155713[26] = 0;
   out_4634264702709155713[27] = 0;
   out_4634264702709155713[28] = 0;
   out_4634264702709155713[29] = 0;
   out_4634264702709155713[30] = 0;
   out_4634264702709155713[31] = 0;
   out_4634264702709155713[32] = 0;
   out_4634264702709155713[33] = 1;
   out_4634264702709155713[34] = 0;
   out_4634264702709155713[35] = 0;
   out_4634264702709155713[36] = 0;
   out_4634264702709155713[37] = 0;
   out_4634264702709155713[38] = 0;
   out_4634264702709155713[39] = 0;
   out_4634264702709155713[40] = 0;
   out_4634264702709155713[41] = 0;
   out_4634264702709155713[42] = 0;
   out_4634264702709155713[43] = 0;
   out_4634264702709155713[44] = 0;
   out_4634264702709155713[45] = 0;
   out_4634264702709155713[46] = 0;
   out_4634264702709155713[47] = 0;
   out_4634264702709155713[48] = 0;
   out_4634264702709155713[49] = 0;
   out_4634264702709155713[50] = 0;
   out_4634264702709155713[51] = 0;
   out_4634264702709155713[52] = 0;
   out_4634264702709155713[53] = 0;
   out_4634264702709155713[54] = 0;
   out_4634264702709155713[55] = 0;
   out_4634264702709155713[56] = 1;
   out_4634264702709155713[57] = 0;
   out_4634264702709155713[58] = 0;
   out_4634264702709155713[59] = 0;
   out_4634264702709155713[60] = 0;
   out_4634264702709155713[61] = 0;
   out_4634264702709155713[62] = 0;
   out_4634264702709155713[63] = 0;
   out_4634264702709155713[64] = 0;
   out_4634264702709155713[65] = 0;
}
void h_10(double *state, double *unused, double *out_6608025656990009536) {
   out_6608025656990009536[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6608025656990009536[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6608025656990009536[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2080906802359322363) {
   out_2080906802359322363[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2080906802359322363[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2080906802359322363[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2080906802359322363[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2080906802359322363[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2080906802359322363[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2080906802359322363[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2080906802359322363[7] = 0;
   out_2080906802359322363[8] = 0;
   out_2080906802359322363[9] = 0;
   out_2080906802359322363[10] = 0;
   out_2080906802359322363[11] = 0;
   out_2080906802359322363[12] = 0;
   out_2080906802359322363[13] = 0;
   out_2080906802359322363[14] = 0;
   out_2080906802359322363[15] = 0;
   out_2080906802359322363[16] = 1;
   out_2080906802359322363[17] = 0;
   out_2080906802359322363[18] = 0;
   out_2080906802359322363[19] = 1;
   out_2080906802359322363[20] = 0;
   out_2080906802359322363[21] = 0;
   out_2080906802359322363[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2080906802359322363[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2080906802359322363[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2080906802359322363[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2080906802359322363[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2080906802359322363[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2080906802359322363[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2080906802359322363[29] = 0;
   out_2080906802359322363[30] = 0;
   out_2080906802359322363[31] = 0;
   out_2080906802359322363[32] = 0;
   out_2080906802359322363[33] = 0;
   out_2080906802359322363[34] = 0;
   out_2080906802359322363[35] = 0;
   out_2080906802359322363[36] = 0;
   out_2080906802359322363[37] = 0;
   out_2080906802359322363[38] = 0;
   out_2080906802359322363[39] = 1;
   out_2080906802359322363[40] = 0;
   out_2080906802359322363[41] = 0;
   out_2080906802359322363[42] = 1;
   out_2080906802359322363[43] = 0;
   out_2080906802359322363[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2080906802359322363[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2080906802359322363[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2080906802359322363[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2080906802359322363[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2080906802359322363[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2080906802359322363[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2080906802359322363[51] = 0;
   out_2080906802359322363[52] = 0;
   out_2080906802359322363[53] = 0;
   out_2080906802359322363[54] = 0;
   out_2080906802359322363[55] = 0;
   out_2080906802359322363[56] = 0;
   out_2080906802359322363[57] = 0;
   out_2080906802359322363[58] = 0;
   out_2080906802359322363[59] = 0;
   out_2080906802359322363[60] = 0;
   out_2080906802359322363[61] = 0;
   out_2080906802359322363[62] = 1;
   out_2080906802359322363[63] = 0;
   out_2080906802359322363[64] = 0;
   out_2080906802359322363[65] = 1;
}
void h_12(double *state, double *unused, double *out_8968777591833378658) {
   out_8968777591833378658[0] = state[0];
   out_8968777591833378658[1] = state[1];
   out_8968777591833378658[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9034212609598024753) {
   out_9034212609598024753[0] = 1;
   out_9034212609598024753[1] = 0;
   out_9034212609598024753[2] = 0;
   out_9034212609598024753[3] = 0;
   out_9034212609598024753[4] = 0;
   out_9034212609598024753[5] = 0;
   out_9034212609598024753[6] = 0;
   out_9034212609598024753[7] = 0;
   out_9034212609598024753[8] = 0;
   out_9034212609598024753[9] = 0;
   out_9034212609598024753[10] = 0;
   out_9034212609598024753[11] = 0;
   out_9034212609598024753[12] = 0;
   out_9034212609598024753[13] = 0;
   out_9034212609598024753[14] = 0;
   out_9034212609598024753[15] = 0;
   out_9034212609598024753[16] = 0;
   out_9034212609598024753[17] = 0;
   out_9034212609598024753[18] = 0;
   out_9034212609598024753[19] = 0;
   out_9034212609598024753[20] = 0;
   out_9034212609598024753[21] = 0;
   out_9034212609598024753[22] = 0;
   out_9034212609598024753[23] = 1;
   out_9034212609598024753[24] = 0;
   out_9034212609598024753[25] = 0;
   out_9034212609598024753[26] = 0;
   out_9034212609598024753[27] = 0;
   out_9034212609598024753[28] = 0;
   out_9034212609598024753[29] = 0;
   out_9034212609598024753[30] = 0;
   out_9034212609598024753[31] = 0;
   out_9034212609598024753[32] = 0;
   out_9034212609598024753[33] = 0;
   out_9034212609598024753[34] = 0;
   out_9034212609598024753[35] = 0;
   out_9034212609598024753[36] = 0;
   out_9034212609598024753[37] = 0;
   out_9034212609598024753[38] = 0;
   out_9034212609598024753[39] = 0;
   out_9034212609598024753[40] = 0;
   out_9034212609598024753[41] = 0;
   out_9034212609598024753[42] = 0;
   out_9034212609598024753[43] = 0;
   out_9034212609598024753[44] = 0;
   out_9034212609598024753[45] = 0;
   out_9034212609598024753[46] = 1;
   out_9034212609598024753[47] = 0;
   out_9034212609598024753[48] = 0;
   out_9034212609598024753[49] = 0;
   out_9034212609598024753[50] = 0;
   out_9034212609598024753[51] = 0;
   out_9034212609598024753[52] = 0;
   out_9034212609598024753[53] = 0;
   out_9034212609598024753[54] = 0;
   out_9034212609598024753[55] = 0;
   out_9034212609598024753[56] = 0;
   out_9034212609598024753[57] = 0;
   out_9034212609598024753[58] = 0;
   out_9034212609598024753[59] = 0;
   out_9034212609598024753[60] = 0;
   out_9034212609598024753[61] = 0;
   out_9034212609598024753[62] = 0;
   out_9034212609598024753[63] = 0;
   out_9034212609598024753[64] = 0;
   out_9034212609598024753[65] = 0;
}
void h_35(double *state, double *unused, double *out_1739278652694740466) {
   out_1739278652694740466[0] = state[7];
   out_1739278652694740466[1] = state[8];
   out_1739278652694740466[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6288649577273011044) {
   out_6288649577273011044[0] = 0;
   out_6288649577273011044[1] = 0;
   out_6288649577273011044[2] = 0;
   out_6288649577273011044[3] = 0;
   out_6288649577273011044[4] = 0;
   out_6288649577273011044[5] = 0;
   out_6288649577273011044[6] = 0;
   out_6288649577273011044[7] = 1;
   out_6288649577273011044[8] = 0;
   out_6288649577273011044[9] = 0;
   out_6288649577273011044[10] = 0;
   out_6288649577273011044[11] = 0;
   out_6288649577273011044[12] = 0;
   out_6288649577273011044[13] = 0;
   out_6288649577273011044[14] = 0;
   out_6288649577273011044[15] = 0;
   out_6288649577273011044[16] = 0;
   out_6288649577273011044[17] = 0;
   out_6288649577273011044[18] = 0;
   out_6288649577273011044[19] = 0;
   out_6288649577273011044[20] = 0;
   out_6288649577273011044[21] = 0;
   out_6288649577273011044[22] = 0;
   out_6288649577273011044[23] = 0;
   out_6288649577273011044[24] = 0;
   out_6288649577273011044[25] = 0;
   out_6288649577273011044[26] = 0;
   out_6288649577273011044[27] = 0;
   out_6288649577273011044[28] = 0;
   out_6288649577273011044[29] = 0;
   out_6288649577273011044[30] = 1;
   out_6288649577273011044[31] = 0;
   out_6288649577273011044[32] = 0;
   out_6288649577273011044[33] = 0;
   out_6288649577273011044[34] = 0;
   out_6288649577273011044[35] = 0;
   out_6288649577273011044[36] = 0;
   out_6288649577273011044[37] = 0;
   out_6288649577273011044[38] = 0;
   out_6288649577273011044[39] = 0;
   out_6288649577273011044[40] = 0;
   out_6288649577273011044[41] = 0;
   out_6288649577273011044[42] = 0;
   out_6288649577273011044[43] = 0;
   out_6288649577273011044[44] = 0;
   out_6288649577273011044[45] = 0;
   out_6288649577273011044[46] = 0;
   out_6288649577273011044[47] = 0;
   out_6288649577273011044[48] = 0;
   out_6288649577273011044[49] = 0;
   out_6288649577273011044[50] = 0;
   out_6288649577273011044[51] = 0;
   out_6288649577273011044[52] = 0;
   out_6288649577273011044[53] = 1;
   out_6288649577273011044[54] = 0;
   out_6288649577273011044[55] = 0;
   out_6288649577273011044[56] = 0;
   out_6288649577273011044[57] = 0;
   out_6288649577273011044[58] = 0;
   out_6288649577273011044[59] = 0;
   out_6288649577273011044[60] = 0;
   out_6288649577273011044[61] = 0;
   out_6288649577273011044[62] = 0;
   out_6288649577273011044[63] = 0;
   out_6288649577273011044[64] = 0;
   out_6288649577273011044[65] = 0;
}
void h_32(double *state, double *unused, double *out_4439112886558686093) {
   out_4439112886558686093[0] = state[3];
   out_4439112886558686093[1] = state[4];
   out_4439112886558686093[2] = state[5];
   out_4439112886558686093[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7817089720703433684) {
   out_7817089720703433684[0] = 0;
   out_7817089720703433684[1] = 0;
   out_7817089720703433684[2] = 0;
   out_7817089720703433684[3] = 1;
   out_7817089720703433684[4] = 0;
   out_7817089720703433684[5] = 0;
   out_7817089720703433684[6] = 0;
   out_7817089720703433684[7] = 0;
   out_7817089720703433684[8] = 0;
   out_7817089720703433684[9] = 0;
   out_7817089720703433684[10] = 0;
   out_7817089720703433684[11] = 0;
   out_7817089720703433684[12] = 0;
   out_7817089720703433684[13] = 0;
   out_7817089720703433684[14] = 0;
   out_7817089720703433684[15] = 0;
   out_7817089720703433684[16] = 0;
   out_7817089720703433684[17] = 0;
   out_7817089720703433684[18] = 0;
   out_7817089720703433684[19] = 0;
   out_7817089720703433684[20] = 0;
   out_7817089720703433684[21] = 0;
   out_7817089720703433684[22] = 0;
   out_7817089720703433684[23] = 0;
   out_7817089720703433684[24] = 0;
   out_7817089720703433684[25] = 0;
   out_7817089720703433684[26] = 1;
   out_7817089720703433684[27] = 0;
   out_7817089720703433684[28] = 0;
   out_7817089720703433684[29] = 0;
   out_7817089720703433684[30] = 0;
   out_7817089720703433684[31] = 0;
   out_7817089720703433684[32] = 0;
   out_7817089720703433684[33] = 0;
   out_7817089720703433684[34] = 0;
   out_7817089720703433684[35] = 0;
   out_7817089720703433684[36] = 0;
   out_7817089720703433684[37] = 0;
   out_7817089720703433684[38] = 0;
   out_7817089720703433684[39] = 0;
   out_7817089720703433684[40] = 0;
   out_7817089720703433684[41] = 0;
   out_7817089720703433684[42] = 0;
   out_7817089720703433684[43] = 0;
   out_7817089720703433684[44] = 0;
   out_7817089720703433684[45] = 0;
   out_7817089720703433684[46] = 0;
   out_7817089720703433684[47] = 0;
   out_7817089720703433684[48] = 0;
   out_7817089720703433684[49] = 1;
   out_7817089720703433684[50] = 0;
   out_7817089720703433684[51] = 0;
   out_7817089720703433684[52] = 0;
   out_7817089720703433684[53] = 0;
   out_7817089720703433684[54] = 0;
   out_7817089720703433684[55] = 0;
   out_7817089720703433684[56] = 0;
   out_7817089720703433684[57] = 0;
   out_7817089720703433684[58] = 0;
   out_7817089720703433684[59] = 0;
   out_7817089720703433684[60] = 0;
   out_7817089720703433684[61] = 0;
   out_7817089720703433684[62] = 0;
   out_7817089720703433684[63] = 0;
   out_7817089720703433684[64] = 0;
   out_7817089720703433684[65] = 0;
   out_7817089720703433684[66] = 0;
   out_7817089720703433684[67] = 0;
   out_7817089720703433684[68] = 0;
   out_7817089720703433684[69] = 0;
   out_7817089720703433684[70] = 0;
   out_7817089720703433684[71] = 0;
   out_7817089720703433684[72] = 1;
   out_7817089720703433684[73] = 0;
   out_7817089720703433684[74] = 0;
   out_7817089720703433684[75] = 0;
   out_7817089720703433684[76] = 0;
   out_7817089720703433684[77] = 0;
   out_7817089720703433684[78] = 0;
   out_7817089720703433684[79] = 0;
   out_7817089720703433684[80] = 0;
   out_7817089720703433684[81] = 0;
   out_7817089720703433684[82] = 0;
   out_7817089720703433684[83] = 0;
   out_7817089720703433684[84] = 0;
   out_7817089720703433684[85] = 0;
   out_7817089720703433684[86] = 0;
   out_7817089720703433684[87] = 0;
}
void h_13(double *state, double *unused, double *out_33375021745986410) {
   out_33375021745986410[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_33375021745986410[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_33375021745986410[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1491437037948813424) {
   out_1491437037948813424[0] = 0;
   out_1491437037948813424[1] = 0;
   out_1491437037948813424[2] = 0;
   out_1491437037948813424[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1491437037948813424[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1491437037948813424[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1491437037948813424[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1491437037948813424[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1491437037948813424[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1491437037948813424[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1491437037948813424[10] = 0;
   out_1491437037948813424[11] = 0;
   out_1491437037948813424[12] = 0;
   out_1491437037948813424[13] = 0;
   out_1491437037948813424[14] = 0;
   out_1491437037948813424[15] = 0;
   out_1491437037948813424[16] = 0;
   out_1491437037948813424[17] = 0;
   out_1491437037948813424[18] = 0;
   out_1491437037948813424[19] = 0;
   out_1491437037948813424[20] = 0;
   out_1491437037948813424[21] = 0;
   out_1491437037948813424[22] = 0;
   out_1491437037948813424[23] = 0;
   out_1491437037948813424[24] = 0;
   out_1491437037948813424[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1491437037948813424[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1491437037948813424[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1491437037948813424[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1491437037948813424[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1491437037948813424[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1491437037948813424[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1491437037948813424[32] = 0;
   out_1491437037948813424[33] = 0;
   out_1491437037948813424[34] = 0;
   out_1491437037948813424[35] = 0;
   out_1491437037948813424[36] = 0;
   out_1491437037948813424[37] = 0;
   out_1491437037948813424[38] = 0;
   out_1491437037948813424[39] = 0;
   out_1491437037948813424[40] = 0;
   out_1491437037948813424[41] = 0;
   out_1491437037948813424[42] = 0;
   out_1491437037948813424[43] = 0;
   out_1491437037948813424[44] = 0;
   out_1491437037948813424[45] = 0;
   out_1491437037948813424[46] = 0;
   out_1491437037948813424[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1491437037948813424[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1491437037948813424[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1491437037948813424[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1491437037948813424[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1491437037948813424[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1491437037948813424[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1491437037948813424[54] = 0;
   out_1491437037948813424[55] = 0;
   out_1491437037948813424[56] = 0;
   out_1491437037948813424[57] = 0;
   out_1491437037948813424[58] = 0;
   out_1491437037948813424[59] = 0;
   out_1491437037948813424[60] = 0;
   out_1491437037948813424[61] = 0;
   out_1491437037948813424[62] = 0;
   out_1491437037948813424[63] = 0;
   out_1491437037948813424[64] = 0;
   out_1491437037948813424[65] = 0;
}
void h_14(double *state, double *unused, double *out_7725128392923987525) {
   out_7725128392923987525[0] = state[10];
   out_7725128392923987525[1] = state[11];
   out_7725128392923987525[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4634264702709155713) {
   out_4634264702709155713[0] = 0;
   out_4634264702709155713[1] = 0;
   out_4634264702709155713[2] = 0;
   out_4634264702709155713[3] = 0;
   out_4634264702709155713[4] = 0;
   out_4634264702709155713[5] = 0;
   out_4634264702709155713[6] = 0;
   out_4634264702709155713[7] = 0;
   out_4634264702709155713[8] = 0;
   out_4634264702709155713[9] = 0;
   out_4634264702709155713[10] = 1;
   out_4634264702709155713[11] = 0;
   out_4634264702709155713[12] = 0;
   out_4634264702709155713[13] = 0;
   out_4634264702709155713[14] = 0;
   out_4634264702709155713[15] = 0;
   out_4634264702709155713[16] = 0;
   out_4634264702709155713[17] = 0;
   out_4634264702709155713[18] = 0;
   out_4634264702709155713[19] = 0;
   out_4634264702709155713[20] = 0;
   out_4634264702709155713[21] = 0;
   out_4634264702709155713[22] = 0;
   out_4634264702709155713[23] = 0;
   out_4634264702709155713[24] = 0;
   out_4634264702709155713[25] = 0;
   out_4634264702709155713[26] = 0;
   out_4634264702709155713[27] = 0;
   out_4634264702709155713[28] = 0;
   out_4634264702709155713[29] = 0;
   out_4634264702709155713[30] = 0;
   out_4634264702709155713[31] = 0;
   out_4634264702709155713[32] = 0;
   out_4634264702709155713[33] = 1;
   out_4634264702709155713[34] = 0;
   out_4634264702709155713[35] = 0;
   out_4634264702709155713[36] = 0;
   out_4634264702709155713[37] = 0;
   out_4634264702709155713[38] = 0;
   out_4634264702709155713[39] = 0;
   out_4634264702709155713[40] = 0;
   out_4634264702709155713[41] = 0;
   out_4634264702709155713[42] = 0;
   out_4634264702709155713[43] = 0;
   out_4634264702709155713[44] = 0;
   out_4634264702709155713[45] = 0;
   out_4634264702709155713[46] = 0;
   out_4634264702709155713[47] = 0;
   out_4634264702709155713[48] = 0;
   out_4634264702709155713[49] = 0;
   out_4634264702709155713[50] = 0;
   out_4634264702709155713[51] = 0;
   out_4634264702709155713[52] = 0;
   out_4634264702709155713[53] = 0;
   out_4634264702709155713[54] = 0;
   out_4634264702709155713[55] = 0;
   out_4634264702709155713[56] = 1;
   out_4634264702709155713[57] = 0;
   out_4634264702709155713[58] = 0;
   out_4634264702709155713[59] = 0;
   out_4634264702709155713[60] = 0;
   out_4634264702709155713[61] = 0;
   out_4634264702709155713[62] = 0;
   out_4634264702709155713[63] = 0;
   out_4634264702709155713[64] = 0;
   out_4634264702709155713[65] = 0;
}
void h_33(double *state, double *unused, double *out_3596385653652256868) {
   out_3596385653652256868[0] = state[16];
   out_3596385653652256868[1] = state[17];
   out_3596385653652256868[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3138092572634153440) {
   out_3138092572634153440[0] = 0;
   out_3138092572634153440[1] = 0;
   out_3138092572634153440[2] = 0;
   out_3138092572634153440[3] = 0;
   out_3138092572634153440[4] = 0;
   out_3138092572634153440[5] = 0;
   out_3138092572634153440[6] = 0;
   out_3138092572634153440[7] = 0;
   out_3138092572634153440[8] = 0;
   out_3138092572634153440[9] = 0;
   out_3138092572634153440[10] = 0;
   out_3138092572634153440[11] = 0;
   out_3138092572634153440[12] = 0;
   out_3138092572634153440[13] = 0;
   out_3138092572634153440[14] = 0;
   out_3138092572634153440[15] = 0;
   out_3138092572634153440[16] = 1;
   out_3138092572634153440[17] = 0;
   out_3138092572634153440[18] = 0;
   out_3138092572634153440[19] = 0;
   out_3138092572634153440[20] = 0;
   out_3138092572634153440[21] = 0;
   out_3138092572634153440[22] = 0;
   out_3138092572634153440[23] = 0;
   out_3138092572634153440[24] = 0;
   out_3138092572634153440[25] = 0;
   out_3138092572634153440[26] = 0;
   out_3138092572634153440[27] = 0;
   out_3138092572634153440[28] = 0;
   out_3138092572634153440[29] = 0;
   out_3138092572634153440[30] = 0;
   out_3138092572634153440[31] = 0;
   out_3138092572634153440[32] = 0;
   out_3138092572634153440[33] = 0;
   out_3138092572634153440[34] = 0;
   out_3138092572634153440[35] = 0;
   out_3138092572634153440[36] = 0;
   out_3138092572634153440[37] = 0;
   out_3138092572634153440[38] = 0;
   out_3138092572634153440[39] = 1;
   out_3138092572634153440[40] = 0;
   out_3138092572634153440[41] = 0;
   out_3138092572634153440[42] = 0;
   out_3138092572634153440[43] = 0;
   out_3138092572634153440[44] = 0;
   out_3138092572634153440[45] = 0;
   out_3138092572634153440[46] = 0;
   out_3138092572634153440[47] = 0;
   out_3138092572634153440[48] = 0;
   out_3138092572634153440[49] = 0;
   out_3138092572634153440[50] = 0;
   out_3138092572634153440[51] = 0;
   out_3138092572634153440[52] = 0;
   out_3138092572634153440[53] = 0;
   out_3138092572634153440[54] = 0;
   out_3138092572634153440[55] = 0;
   out_3138092572634153440[56] = 0;
   out_3138092572634153440[57] = 0;
   out_3138092572634153440[58] = 0;
   out_3138092572634153440[59] = 0;
   out_3138092572634153440[60] = 0;
   out_3138092572634153440[61] = 0;
   out_3138092572634153440[62] = 1;
   out_3138092572634153440[63] = 0;
   out_3138092572634153440[64] = 0;
   out_3138092572634153440[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2252060213547807159) {
  H(in_vec, out_2252060213547807159);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7841525859904799454) {
  err_fun(nom_x, delta_x, out_7841525859904799454);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4658714646580996073) {
  inv_err_fun(nom_x, true_x, out_4658714646580996073);
}
void live_H_mod_fun(double *state, double *out_9058380023042709905) {
  H_mod_fun(state, out_9058380023042709905);
}
void live_f_fun(double *state, double dt, double *out_1044564808547905457) {
  f_fun(state,  dt, out_1044564808547905457);
}
void live_F_fun(double *state, double dt, double *out_6112935945836886280) {
  F_fun(state,  dt, out_6112935945836886280);
}
void live_h_4(double *state, double *unused, double *out_6558505756783094796) {
  h_4(state, unused, out_6558505756783094796);
}
void live_H_4(double *state, double *unused, double *out_4393075056079565068) {
  H_4(state, unused, out_4393075056079565068);
}
void live_h_9(double *state, double *unused, double *out_7725128392923987525) {
  h_9(state, unused, out_7725128392923987525);
}
void live_H_9(double *state, double *unused, double *out_4634264702709155713) {
  H_9(state, unused, out_4634264702709155713);
}
void live_h_10(double *state, double *unused, double *out_6608025656990009536) {
  h_10(state, unused, out_6608025656990009536);
}
void live_H_10(double *state, double *unused, double *out_2080906802359322363) {
  H_10(state, unused, out_2080906802359322363);
}
void live_h_12(double *state, double *unused, double *out_8968777591833378658) {
  h_12(state, unused, out_8968777591833378658);
}
void live_H_12(double *state, double *unused, double *out_9034212609598024753) {
  H_12(state, unused, out_9034212609598024753);
}
void live_h_35(double *state, double *unused, double *out_1739278652694740466) {
  h_35(state, unused, out_1739278652694740466);
}
void live_H_35(double *state, double *unused, double *out_6288649577273011044) {
  H_35(state, unused, out_6288649577273011044);
}
void live_h_32(double *state, double *unused, double *out_4439112886558686093) {
  h_32(state, unused, out_4439112886558686093);
}
void live_H_32(double *state, double *unused, double *out_7817089720703433684) {
  H_32(state, unused, out_7817089720703433684);
}
void live_h_13(double *state, double *unused, double *out_33375021745986410) {
  h_13(state, unused, out_33375021745986410);
}
void live_H_13(double *state, double *unused, double *out_1491437037948813424) {
  H_13(state, unused, out_1491437037948813424);
}
void live_h_14(double *state, double *unused, double *out_7725128392923987525) {
  h_14(state, unused, out_7725128392923987525);
}
void live_H_14(double *state, double *unused, double *out_4634264702709155713) {
  H_14(state, unused, out_4634264702709155713);
}
void live_h_33(double *state, double *unused, double *out_3596385653652256868) {
  h_33(state, unused, out_3596385653652256868);
}
void live_H_33(double *state, double *unused, double *out_3138092572634153440) {
  H_33(state, unused, out_3138092572634153440);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
